<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="E:/000_Project/chinook.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="3862"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,6:mainalbums"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="albums" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort><column index="2" mode="0"/></sort><column_widths><column index="1" value="61"/><column index="2" value="300"/><column index="3" value="59"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="artists" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="59"/><column index="2" value="300"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">-- 1. Top Customers by Spending
SELECT 
    cu.firstname || ' ' || cu.lastname as Customer_name,
    round(sum(invi.unitprice * invi.quantity), 2) as Total_spent
from customers as cu
    JOIN invoices 	    as inv 	on cu.CustomerId = inv.CustomerId
    Join invoice_items 	as invi on inv.InvoiceId = invi.InvoiceId
GROUP BY 1
ORDER BY 2 DESC
Limit 10;</sql><sql name="SQL 2">-- 2. Top Selling Artists 
SELECT 
    ar.name as Artist,
    sum(invi.quantity) as Units_Sold
from artists as ar
    JOIN albums as al on ar.ArtistId = al.ArtistId
    Join tracks as tr on al.AlbumId = tr.AlbumId
    JOIN invoice_items as invi on tr.TrackId = invi.TrackId
GROUP BY 1
ORDER BY 2 DESC
Limit 10;</sql><sql name="SQL 3">-- 3. Top Selling Genres
SELECT 
    ge.name as Genre_name,
    sum(invi.quantity) as Units_Sold
from genres as ge
    Join tracks        as tr   on ge.GenreId = tr.GenreId
    JOIN invoice_items as invi on tr.TrackId = invi.TrackId
GROUP BY 1
ORDER BY 2 DESC
Limit 10;</sql><sql name="SQL 4">-- 4. Total songs of each genres
SELECT 
    ge.Name AS Genre_name,
    COUNT(tr.TrackId) AS Total_Songs
FROM genres AS ge
JOIN tracks AS tr ON ge.GenreId = tr.GenreId
GROUP BY 1
ORDER by 2 DESC;</sql><sql name="SQL 5">-- 5. Monthly Revenue Trends in 2011-2013
select strftime('%Y-%m', InvoiceDate) AS Monthid,
  sum(total) as Revenue
from invoices
WHERE strftime('%Y', InvoiceDate) in ('2011', '2012', '2013')
GROUP by 1;</sql><sql name="SQL 6">-- 6. Customer geography that spends more than $100
SELECT 
    cu.Country AS Customer_country,
    round(SUM(invi.UnitPrice * invi.Quantity), 2) AS Total_spent
FROM customers AS cu
JOIN invoices      AS inv  ON cu.CustomerId = inv.CustomerId
JOIN invoice_items AS invi ON inv.InvoiceId = invi.InvoiceId
GROUP BY cu.Country
HAVING Total_spent &gt;= 100
ORDER BY Total_spent DESC;</sql><sql name="SQL 7">-- 7. Total Revenue
SELECT 
	sum(total) as Revenue,
	sum(customerid) as Total_Customers
	FROM invoices;</sql><current_tab id="0"/></tab_sql></sqlb_project>
